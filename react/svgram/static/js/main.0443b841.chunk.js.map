{"version":3,"sources":["components/Diagram/index.js","Demos.js","index.js"],"names":["Diagram","useState","ref","React","createRef","viewport","width","height","zoom","layout","setLayout","useEffect","resizeHandler","current","set","Object","assign","clientWidth","clientHeight","window","addEventListener","removeEventListener","useLayoutEffect","style","xmlns","xmlnsXlink","x","y","stamp","start","Date","now","milliseconds","seconds","minutes","path","red","awl","viewShift","draw","tick","RAF","requestAnimationFrame","buffer","create","Math","abs","floor","tan","viewBox","cancelAnimationFrame","fill","name","transform","stroke","strokeWidth","d","Demos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0443b841.chunk.js","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\n\nfunction Diagram() {\n  const [layout, setLayout] = useState({\n    ref: React.createRef(),\n    viewport: null,\n    width: 0,\n    height: 0,\n    zoom: 1\n  });\n  useEffect(() => {\n    const resizeHandler = () => {\n      if (layout.ref.current) {\n        const set = Object.assign({}, layout);\n        set.width = layout.ref.current.clientWidth;\n        set.height = layout.ref.current.clientHeight;\n        setLayout(set);\n      }\n    };\n    window.addEventListener(\"resize\", resizeHandler);\n    return () => window.removeEventListener(\"resize\", resizeHandler);\n  });\n  useLayoutEffect(() => {\n    if (!layout.viewport && layout.ref.current) {\n      const set = Object.assign({}, layout);\n      set.width = layout.ref.current.clientWidth;\n      set.height = layout.ref.current.clientHeight;\n      set.viewport = `0 0 ${set.width} ${set.height}`;\n      setLayout(set);\n    }\n  }, [layout]);\n\n  const Drawer = () => {\n    const [draw, tick] = useState({\n      stamp: {\n        start: Date.now(),\n        milliseconds: 0,\n        seconds: 0,\n        minutes: 0\n      },\n      path: {\n        x: 0,\n        red: {\n          awl: \"\", // Schilo\n          y: 0,\n          x: null\n        }\n      },\n      viewShift: `translate(0, 0)`\n    });\n    useEffect(() => {\n      const frame = () => {\n        const buffer = Object.create(draw);\n        // or bad perfomance? .. = deepFreeze(Object.create(draw)); (from ../utils)\n        buffer.stamp.milliseconds = Math.abs(buffer.stamp.start - Date.now());\n        buffer.stamp.seconds = Math.floor(buffer.stamp.milliseconds / 1000);\n        buffer.stamp.minutes = Math.floor((buffer.stamp.milliseconds / 1000 / 60) << 0);\n        buffer.path.x = buffer.stamp.milliseconds / 10;\n\n        buffer.path.red.y = Math.tan(buffer.path.x);\n        if (!buffer.path.red.awl) buffer.path.red.awl = `M 0 ${draw.path.red.y} L ${layout.width} ${draw.path.red.y} `;\n        buffer.path.red.awl += `L ${layout.width + buffer.path.x} ${draw.path.red.y} `;\n\n        buffer.viewBox = `${buffer.path.x} 0 ${buffer.path.x + layout.width} ${\n          layout.height\n        }`;\n        buffer.viewShift = `translate(${-buffer.path.x}, ${layout.height / 2})`;\n        tick(buffer);\n      };\n      const RAF = requestAnimationFrame(frame);\n      return () => {\n        window.cancelAnimationFrame(RAF);\n      };\n    });\n    return (\n      <>\n        <svg\n          x=\"0\"\n          y=\"0\"\n          style={{\n            fill: \"gray\",\n            width: layout.width ? layout.width : \"100%\",\n            height: layout.height ? layout.height : \"100%\"\n          }}\n        >\n          <rect\n            x=\"0\"\n            y=\"0\"\n            style={{\n              fill: 'white',\n              width: \"100%\",\n              height: \"100%\"\n            }} />\n          <g name=\"mono\" transform={draw.viewShift}>\n            <path\n              name=\"red\"\n              style={{ fill: 'none', stroke: \"red\", strokeWidth: 1 }}\n              d={draw.path.red.awl}\n            />\n          </g>\n        </svg>\n        <>\n          <text x=\"0\" y=\"40\">\n            debug drawer:\n          </text>\n          <text x=\"150\" y=\"40\">\n            init: {draw.stamp.start}\n          </text>\n          <text x=\"350\" y=\"40\">\n            {draw.stamp.milliseconds}\n          </text>\n          <text x=\"430\" y=\"40\">\n            total: {draw.stamp.minutes}min\n          </text>\n          <text x=\"540\" y=\"40\">\n            total: {draw.stamp.seconds}sec\n          </text>\n        </>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <p>debug viewport:</p>\n      <p>width: {layout.width}</p>\n      <p>height: {layout.height}</p>\n      <div style={{ width: \"100%\", height: \"320px\" }}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          ref={layout.ref}\n          viewport={layout.viewport ? layout.viewport : \"\"}\n          style={{\n            width: layout.width ? layout.width : \"100%\",\n            height: layout.height ? layout.height : \"100%\"\n          }}\n        >\n          {layout.ref.current ? (\n            <>\n              <text x=\"0\" y=\"13\" width=\"70\" height=\"40\">\n                Ð”emos React Component August 2019 MIT License\n              </text>\n              <Drawer />\n            </>\n          ) : (\n            <>\n              <text x=\"40\" y=\"60\" width=\"70\" height=\"40\">\n                init viewport\n              </text>\n            </>\n          )}\n        </svg>\n      </div>\n    </>\n  );\n}\n\nexport default Diagram;\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\n\nimport Diagram from \"./components/Diagram\";\n\nfunction Demos() {\n\n  return (\n    <>\n      Linear Diagram call:\n      <Diagram />\n    </>\n  );\n}\n\nexport default Demos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Demos from './Demos';\n\nReactDOM.render(<Demos />, document.getElementById('root'));"],"sourceRoot":""}